/*
 * To change this template, choose Tools | Templates and open the template in
 * the editor.
 */
package com.kitfox.raven.movie.exporter;

import java.io.File;
import javax.imageio.ImageIO;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileFilter;

/**
 *
 * @author kitfox
 */
public class ExportMovieFramesPanel extends javax.swing.JPanel
{
    JFileChooser chooser = new JFileChooser();
    
    final MovieExporterContext ctx;

    boolean updating = true;

    /**
     * Creates new form ExportMoviePanel
     */
    public ExportMovieFramesPanel(MovieExporterContext ctx)
    {
        this.ctx = ctx;
        initComponents();
        
//        chooser.setFileFilter(new Filter());
        chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        
        for (String suf: ImageIO.getReaderFileSuffixes())
        {
            combo_imgFmt.addItem(suf);
        }
        
        updateFromContext();
    }

    private void updateFromContext()
    {
        updating = true;

        text_dir.setText(ctx.getFramesDir());
        text_filePrefix.setText(ctx.getFramesPrefix());
        combo_imgFmt.setSelectedItem(ctx.getFramesImageFormat());
        spinner_pad.setValue(ctx.getFramesNumberPadding());
        
        updating = false;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        text_dir = new javax.swing.JTextField();
        bn_browseExpDir = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        text_filePrefix = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        combo_imgFmt = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        spinner_pad = new javax.swing.JSpinner();

        jLabel1.setText("Directory");

        text_dir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                text_dirActionPerformed(evt);
            }
        });
        text_dir.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                text_dirFocusLost(evt);
            }
        });

        bn_browseExpDir.setText("...");
        bn_browseExpDir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bn_browseExpDirActionPerformed(evt);
            }
        });

        jLabel2.setText("File Prefix");

        text_filePrefix.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                text_filePrefixActionPerformed(evt);
            }
        });
        text_filePrefix.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                text_filePrefixFocusLost(evt);
            }
        });

        jLabel3.setText("Image Format");

        combo_imgFmt.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                combo_imgFmtPropertyChange(evt);
            }
        });

        jLabel4.setText("Number Padding");

        spinner_pad.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(4), Integer.valueOf(1), null, Integer.valueOf(1)));
        spinner_pad.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                spinner_padPropertyChange(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(text_dir, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bn_browseExpDir))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(jLabel3)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(combo_imgFmt, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(jLabel2)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(text_filePrefix, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(spinner_pad, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(text_dir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bn_browseExpDir))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(text_filePrefix, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(combo_imgFmt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(spinner_pad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(188, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void text_dirActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_text_dirActionPerformed
    {//GEN-HEADEREND:event_text_dirActionPerformed
        ctx.setFramesDir(text_dir.getText());
    }//GEN-LAST:event_text_dirActionPerformed

    private void bn_browseExpDirActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_bn_browseExpDirActionPerformed
    {//GEN-HEADEREND:event_bn_browseExpDirActionPerformed
        File file = new File(text_dir.getText());
        if (file.exists())
        {
            chooser.setCurrentDirectory(file);
        }
        
        if (chooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION)
        {
            file = chooser.getSelectedFile();
            text_dir.setText(file.getAbsolutePath());
            ctx.setFramesDir(text_dir.getText());
        }
    }//GEN-LAST:event_bn_browseExpDirActionPerformed

    private void text_filePrefixActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_text_filePrefixActionPerformed
    {//GEN-HEADEREND:event_text_filePrefixActionPerformed
        ctx.setFramesPrefix(text_filePrefix.getText());
    }//GEN-LAST:event_text_filePrefixActionPerformed

    private void text_dirFocusLost(java.awt.event.FocusEvent evt)//GEN-FIRST:event_text_dirFocusLost
    {//GEN-HEADEREND:event_text_dirFocusLost
        ctx.setFramesDir(text_dir.getText());
    }//GEN-LAST:event_text_dirFocusLost

    private void text_filePrefixFocusLost(java.awt.event.FocusEvent evt)//GEN-FIRST:event_text_filePrefixFocusLost
    {//GEN-HEADEREND:event_text_filePrefixFocusLost
        ctx.setFramesPrefix(text_filePrefix.getText());
    }//GEN-LAST:event_text_filePrefixFocusLost

    private void combo_imgFmtPropertyChange(java.beans.PropertyChangeEvent evt)//GEN-FIRST:event_combo_imgFmtPropertyChange
    {//GEN-HEADEREND:event_combo_imgFmtPropertyChange
        Object obj = combo_imgFmt.getSelectedItem();
        ctx.setFramesImageFormat((String)obj);
    }//GEN-LAST:event_combo_imgFmtPropertyChange

    private void spinner_padPropertyChange(java.beans.PropertyChangeEvent evt)//GEN-FIRST:event_spinner_padPropertyChange
    {//GEN-HEADEREND:event_spinner_padPropertyChange
        Integer val = (Integer)spinner_pad.getValue();
        ctx.setFramesNumberPadding(val);
    }//GEN-LAST:event_spinner_padPropertyChange

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bn_browseExpDir;
    private javax.swing.JComboBox combo_imgFmt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JSpinner spinner_pad;
    private javax.swing.JTextField text_dir;
    private javax.swing.JTextField text_filePrefix;
    // End of variables declaration//GEN-END:variables

    //----------------------------
//    class Filter extends FileFilter    
//    {
//
//        @Override
//        public boolean accept(File f)
//        {
//            return f.isDirectory();
//        }
//
//        @Override
//        public String getDescription()
//        {
//            return "Directory";
//        }
//    }
}
