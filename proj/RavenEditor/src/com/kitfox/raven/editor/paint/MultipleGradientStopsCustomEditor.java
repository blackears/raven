/*
 * Copyright 2011 Mark McKay
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * ColorStylePanel.java
 *
 * Created on Sep 17, 2009, 4:40:13 PM
 */

package com.kitfox.raven.editor.paint;

import com.kitfox.game.control.color.MultipleGradientStops;
import com.kitfox.raven.util.tree.PropertyCustomEditor;
import com.kitfox.raven.util.tree.PropertyData;
import com.kitfox.raven.util.tree.PropertyDataInline;
import java.awt.BorderLayout;
import java.awt.Component;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;

/**
 *
 * @author kitfox
 */
public class MultipleGradientStopsCustomEditor extends javax.swing.JPanel
        implements PropertyChangeListener, PropertyCustomEditor
{
    private static final long serialVersionUID = 1;

    final MultipleGradientStopsEditor ed;

//    ColorStyleEditorPanel colorPanel = new ColorStyleEditorPanel();
    MultipleGradientStopsPanel gradPanel = new MultipleGradientStopsPanel();

    PropertyData<MultipleGradientStops> initValue;
    PropertyData<MultipleGradientStops> curValue;

    
    /** Creates new form ColorStylePanel */
    public MultipleGradientStopsCustomEditor(MultipleGradientStopsEditor ed)
    {
        initComponents();
        this.ed = ed;
        curValue = initValue = ed.getValue();

        add(gradPanel, BorderLayout.CENTER);
        gradPanel.addPropertyChangeListener(this);

        gradPanel.setStops(initValue.getValue(ed.getDocument()));
    }

    public void setValue(MultipleGradientStops value)
    {
        setValue(new PropertyDataInline(value));
    }

    public void setValue(PropertyData<MultipleGradientStops> data)
    {
        curValue = data;
        ed.setValue(data, false);
    }

    @Override
    public void customEditorCommit()
    {
        ed.setValue(curValue);
    }

    @Override
    public void customEditorCancel()
    {
        ed.setValue(initValue, false);
    }

    @Override
    public Component getCustomEditor()
    {
        return this;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setLayout(new java.awt.BorderLayout());
    }// </editor-fold>//GEN-END:initComponents

    @Override
    public void propertyChange(PropertyChangeEvent evt)
    {
        if (evt.getSource() == gradPanel
                && MultipleGradientStopsPanel.PROP_STOPS.equals(evt.getPropertyName()))
        {
            MultipleGradientStops col = gradPanel.getStops();
            setValue(col);
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

}
