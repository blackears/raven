/*
 * Copyright 2011 Mark McKay
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * PropertyCellRenderer.java
 *
 * Created on Jul 8, 2009, 12:35:57 PM
 */

package com.kitfox.raven.editor.view.properties;

import com.kitfox.raven.util.tree.NodeSymbol;
import com.kitfox.raven.util.tree.PropertyWrapper;
import com.kitfox.raven.util.tree.TrackLibrary;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Graphics;
import java.beans.PropertyEditor;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.table.TableCellRenderer;

/**
 *
 * @author kitfox
 */
public class PropertyCellRenderer extends javax.swing.JPanel implements TableCellRenderer
{
    private static final long serialVersionUID = 1;

    static final Color COLOR_OPEN = Color.WHITE;
    static final Color COLOR_KEY = Color.YELLOW;
    static final Color COLOR_INTERP = new Color(201, 174, 228);

    public class Paintable extends JPanel
    {
        private static final long serialVersionUID = 1;

        private PropertyEditor ed;

        @Override
        public void paintComponent(Graphics g)
        {
            ed.paintValue(g, getBounds());
        }

        public void setEd(PropertyEditor ed)
        {
            this.ed = ed;
        }
    };

    Paintable paintableCell = new Paintable();

    /** Creates new form PropertyCellRenderer */
    public PropertyCellRenderer() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        label_value = new javax.swing.JLabel();
        bn_edit = new javax.swing.JButton();

        setLayout(new java.awt.BorderLayout());

        label_value.setOpaque(true);
        add(label_value, java.awt.BorderLayout.CENTER);

        bn_edit.setText("...");
        bn_edit.setMargin(new java.awt.Insets(2, 2, 2, 2));
        add(bn_edit, java.awt.BorderLayout.LINE_END);
    }// </editor-fold>//GEN-END:initComponents

    @Override
    public Component getTableCellRendererComponent(JTable table, Object value,
            boolean isSelected, boolean hasFocus, int row, int column)
    {
        PropertyModelLine line = (PropertyModelLine)value;

        PropertyEditor ed = line.getEditor();
        if (ed.isPaintable())
        {
            paintableCell.setEd(ed);
            return paintableCell;
        }


        remove(bn_edit);
        if (ed.supportsCustomEditor())
        {
            add(bn_edit, BorderLayout.EAST);
        }

        String text = "" + ed.getAsText();
        label_value.setText(text);
        setToolTipText(text);

        //Find track status
        Color bgColor = COLOR_OPEN;
        PropertyWrapper prop = line.getProp();
        NodeSymbol doc = prop.getNode().getSymbol();
        if (doc != null)
        {
            TrackLibrary trackLib = doc.getTrackLibrary();
            int frame = trackLib.getCurFrame();
            int curTrack = trackLib.getCurTrackUid();

            if (prop.isKeyAt(curTrack, frame))
            {
                bgColor = COLOR_KEY;
            }
            else if (prop.isInterpolatedAt(curTrack, frame))
            {
                bgColor = COLOR_INTERP;
            }
        }

        label_value.setBackground(bgColor);
        return this;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bn_edit;
    private javax.swing.JLabel label_value;
    // End of variables declaration//GEN-END:variables

}
