/*
 * Copyright 2011 Mark McKay
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * SourceCodePanel.java
 *
 * Created on Feb 18, 2011, 12:20:43 PM
 */

package com.kitfox.raven.editor.view.code;

import com.kitfox.raven.util.PropertyChangeWeakListener;
import com.kitfox.raven.util.tree.SourceCode;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;

/**
 *
 * @author kitfox
 */
public class SourceCodePanel extends javax.swing.JPanel
        implements PropertyChangeListener
{
    private SourceCode sourceCode;
    PropertyChangeWeakListener listener;

    boolean updating;

    /** Creates new form SourceCodePanel */
    public SourceCodePanel()
    {
        initComponents();
        setSourceCode(null);
    }

    /**
     * @return the sourceCode
     */
    public SourceCode getSourceCode()
    {
        return sourceCode;
    }

    /**
     * @param sourceCode the sourceCode to set
     */
    public void setSourceCode(SourceCode sourceCode)
    {
        if (listener != null)
        {
            listener.remove();
            listener = null;
        }

        this.sourceCode = sourceCode;

        if (sourceCode == null)
        {
            textArea_source.setText("");
            textArea_source.setEnabled(false);
//            textArea_header.setText("");
//            textArea_header.setEnabled(false);
        }
        else
        {
            textArea_source.setText(sourceCode.getSource());
            textArea_source.setEnabled(true);
//            textArea_header.setText(sourceCode.getHeader());
//            textArea_header.setEnabled(true);

            listener = new PropertyChangeWeakListener(this, sourceCode);
            sourceCode.addPropertyChangeListener(listener);
        }

    }

    @Override
    public void propertyChange(PropertyChangeEvent evt)
    {
//        updating = true;
//
//        if (SourceCode.PROP_SOURCE.equals(evt.getPropertyName()))
//        {
//            textArea_source.setText(sourceCode.getSource());
//        }
//        else if(SourceCode.PROP_HEADER.equals(evt.getPropertyName()))
//        {
//            textArea_header.setText(sourceCode.getHeader());
//        }
//
//        updating = false;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        textArea_source = new javax.swing.JTextArea();
        check_lineWrapSource = new javax.swing.JCheckBox();

        setLayout(new java.awt.BorderLayout());

        textArea_source.setColumns(20);
        textArea_source.setRows(5);
        textArea_source.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                textArea_sourceCaretUpdate(evt);
            }
        });
        jScrollPane3.setViewportView(textArea_source);

        check_lineWrapSource.setText("Line Wrap");
        check_lineWrapSource.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                check_lineWrapSourceActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 433, Short.MAX_VALUE)
                    .addComponent(check_lineWrapSource))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(check_lineWrapSource)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 288, Short.MAX_VALUE)
                .addContainerGap())
        );

        add(jPanel3, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void textArea_sourceCaretUpdate(javax.swing.event.CaretEvent evt)//GEN-FIRST:event_textArea_sourceCaretUpdate
    {//GEN-HEADEREND:event_textArea_sourceCaretUpdate
        if (listener != null)
        {
            listener.remove();

            sourceCode.setSource(textArea_source.getText());

            listener = new PropertyChangeWeakListener(this, sourceCode);
            sourceCode.addPropertyChangeListener(listener);
        }
        
    }//GEN-LAST:event_textArea_sourceCaretUpdate

    private void check_lineWrapSourceActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_check_lineWrapSourceActionPerformed
    {//GEN-HEADEREND:event_check_lineWrapSourceActionPerformed
        textArea_source.setLineWrap(check_lineWrapSource.isSelected());


    }//GEN-LAST:event_check_lineWrapSourceActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox check_lineWrapSource;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea textArea_source;
    // End of variables declaration//GEN-END:variables

}
