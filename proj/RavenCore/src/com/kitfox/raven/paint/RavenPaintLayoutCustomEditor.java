/*
 * Copyright 2011 Mark McKay
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.kitfox.raven.paint;

import com.kitfox.coyote.math.CyVector2d;
import com.kitfox.raven.util.tree.PropertyCustomEditor;
import com.kitfox.raven.util.tree.PropertyData;
import com.kitfox.raven.util.tree.PropertyDataInline;
import java.awt.Component;

/**
 *
 * @author kitfox
 */
public class RavenPaintLayoutCustomEditor extends javax.swing.JPanel
    implements PropertyCustomEditor
{
    private RavenPaintLayoutEditor editor;
    private PropertyData<RavenPaintLayout> initValue;

    RavenPaintLayout curValue;
    
    private double centerX;
    private double centerY;
    private double scaleX;
    private double scaleY;
    private double rot;
    private double skew;
    
    /**
     * Creates new form RavenPaintLayoutCustomEditor
     */
    public RavenPaintLayoutCustomEditor(RavenPaintLayoutEditor editor)
    {
        initComponents();
        this.editor = editor;
        initValue = editor.getValue();
        curValue = initValue.getValue(editor.getDocument());
        
        CyVector2d ptCenter = new CyVector2d();
        CyVector2d ptRadiusX = new CyVector2d();
        CyVector2d ptRadiusY = new CyVector2d();
        curValue.getCenter(ptCenter);
        curValue.getBasisX(ptRadiusX);
        curValue.getBasisY(ptRadiusY);
        
        ptRadiusX.add(ptCenter);
        ptRadiusY.add(ptCenter);
        
        centerX = ptCenter.x;
        centerY = ptCenter.y;
        scaleX = ptRadiusX.length();
        scaleY = ptRadiusY.length();
        rot = Math.toDegrees(Math.atan2(ptRadiusX.y, ptRadiusX.x));
        double angleY = Math.toDegrees(Math.atan2(ptRadiusY.y, ptRadiusY.x));
        skew = angleY - rot;
        
        spinner_centerX.setValue(centerX);
        spinner_centerY.setValue(centerY);

        spinner_rot.setValue(rot);
        spinner_skew.setValue(skew - rot);
        
        spinner_scaleX.setValue(scaleX);
        spinner_scaleY.setValue(scaleY);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jLabel1 = new javax.swing.JLabel();
        spinner_centerX = new javax.swing.JSpinner();
        jLabel2 = new javax.swing.JLabel();
        spinner_centerY = new javax.swing.JSpinner();
        jLabel3 = new javax.swing.JLabel();
        spinner_rot = new javax.swing.JSpinner();
        jLabel4 = new javax.swing.JLabel();
        spinner_skew = new javax.swing.JSpinner();
        jLabel5 = new javax.swing.JLabel();
        spinner_scaleX = new javax.swing.JSpinner();
        jLabel6 = new javax.swing.JLabel();
        spinner_scaleY = new javax.swing.JSpinner();

        jLabel1.setText("Center X");

        spinner_centerX.setModel(new javax.swing.SpinnerNumberModel(Double.valueOf(0.0d), null, null, Double.valueOf(1.0d)));
        spinner_centerX.addChangeListener(new javax.swing.event.ChangeListener()
        {
            public void stateChanged(javax.swing.event.ChangeEvent evt)
            {
                spinner_centerXStateChanged(evt);
            }
        });

        jLabel2.setText("Center Y");

        spinner_centerY.setModel(new javax.swing.SpinnerNumberModel(Double.valueOf(0.0d), null, null, Double.valueOf(1.0d)));
        spinner_centerY.addChangeListener(new javax.swing.event.ChangeListener()
        {
            public void stateChanged(javax.swing.event.ChangeEvent evt)
            {
                spinner_centerYStateChanged(evt);
            }
        });

        jLabel3.setText("Rotation");

        spinner_rot.setModel(new javax.swing.SpinnerNumberModel(Double.valueOf(0.0d), null, null, Double.valueOf(1.0d)));
        spinner_rot.addChangeListener(new javax.swing.event.ChangeListener()
        {
            public void stateChanged(javax.swing.event.ChangeEvent evt)
            {
                spinner_rotStateChanged(evt);
            }
        });

        jLabel4.setText("Skew Angle");

        spinner_skew.setModel(new javax.swing.SpinnerNumberModel(Double.valueOf(0.0d), null, null, Double.valueOf(1.0d)));
        spinner_skew.addChangeListener(new javax.swing.event.ChangeListener()
        {
            public void stateChanged(javax.swing.event.ChangeEvent evt)
            {
                spinner_skewStateChanged(evt);
            }
        });

        jLabel5.setText("Scale X");

        spinner_scaleX.setModel(new javax.swing.SpinnerNumberModel(Double.valueOf(0.0d), null, null, Double.valueOf(1.0d)));
        spinner_scaleX.addChangeListener(new javax.swing.event.ChangeListener()
        {
            public void stateChanged(javax.swing.event.ChangeEvent evt)
            {
                spinner_scaleXStateChanged(evt);
            }
        });

        jLabel6.setText("Scale Y");

        spinner_scaleY.setModel(new javax.swing.SpinnerNumberModel(Double.valueOf(0.0d), null, null, Double.valueOf(1.0d)));
        spinner_scaleY.addChangeListener(new javax.swing.event.ChangeListener()
        {
            public void stateChanged(javax.swing.event.ChangeEvent evt)
            {
                spinner_scaleYStateChanged(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(spinner_scaleX))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(spinner_centerX, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(spinner_rot)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(spinner_centerY, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(spinner_skew, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(spinner_scaleY, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(spinner_centerX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(spinner_centerY, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(spinner_rot, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(spinner_skew, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(spinner_scaleX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(spinner_scaleY, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void spinner_centerXStateChanged(javax.swing.event.ChangeEvent evt)//GEN-FIRST:event_spinner_centerXStateChanged
    {//GEN-HEADEREND:event_spinner_centerXStateChanged
        centerX = (Double)spinner_centerX.getValue();
        updateLayout();
    }//GEN-LAST:event_spinner_centerXStateChanged

    private void spinner_centerYStateChanged(javax.swing.event.ChangeEvent evt)//GEN-FIRST:event_spinner_centerYStateChanged
    {//GEN-HEADEREND:event_spinner_centerYStateChanged
        centerY = (Double)spinner_centerY.getValue();
        updateLayout();
    }//GEN-LAST:event_spinner_centerYStateChanged

    private void spinner_rotStateChanged(javax.swing.event.ChangeEvent evt)//GEN-FIRST:event_spinner_rotStateChanged
    {//GEN-HEADEREND:event_spinner_rotStateChanged
        rot = (Double)spinner_rot.getValue();
        updateLayout();
    }//GEN-LAST:event_spinner_rotStateChanged

    private void spinner_skewStateChanged(javax.swing.event.ChangeEvent evt)//GEN-FIRST:event_spinner_skewStateChanged
    {//GEN-HEADEREND:event_spinner_skewStateChanged
        skew = (Double)spinner_skew.getValue();
        updateLayout();
    }//GEN-LAST:event_spinner_skewStateChanged

    private void spinner_scaleXStateChanged(javax.swing.event.ChangeEvent evt)//GEN-FIRST:event_spinner_scaleXStateChanged
    {//GEN-HEADEREND:event_spinner_scaleXStateChanged
        scaleX = (Double)spinner_scaleX.getValue();
        updateLayout();
    }//GEN-LAST:event_spinner_scaleXStateChanged

    private void spinner_scaleYStateChanged(javax.swing.event.ChangeEvent evt)//GEN-FIRST:event_spinner_scaleYStateChanged
    {//GEN-HEADEREND:event_spinner_scaleYStateChanged
        scaleY = (Double)spinner_scaleY.getValue();
        updateLayout();
    }//GEN-LAST:event_spinner_scaleYStateChanged

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JSpinner spinner_centerX;
    private javax.swing.JSpinner spinner_centerY;
    private javax.swing.JSpinner spinner_rot;
    private javax.swing.JSpinner spinner_scaleX;
    private javax.swing.JSpinner spinner_scaleY;
    private javax.swing.JSpinner spinner_skew;
    // End of variables declaration//GEN-END:variables

    private void updateLayout()
    {
        CyVector2d ptCenter = new CyVector2d(centerX, centerY);
        CyVector2d ptRadiusX = new CyVector2d();
        CyVector2d ptRadiusY = new CyVector2d();
        
        double angleX = Math.toRadians(rot);
        double angleY = Math.toRadians(rot + skew);
        ptRadiusX.set(Math.cos(angleX), Math.sin(angleX));
        ptRadiusX.scale(scaleX);
        
        ptRadiusY.set(Math.cos(angleY), Math.sin(angleY));
        ptRadiusY.scale(scaleY);
        
        curValue = RavenPaintLayout.createTexture2D(ptCenter, ptRadiusX, ptRadiusY);
        editor.setValue(
                new PropertyDataInline<RavenPaintLayout>(curValue), 
                false);
        
    }
    
    @Override
    public Component getCustomEditor()
    {
        return this;
    }

    @Override
    public void customEditorCommit()
    {
        editor.setValue(
                new PropertyDataInline<RavenPaintLayout>(curValue), 
                true);
    }

    @Override
    public void customEditorCancel()
    {
        editor.setValue(initValue, false);
    }
}
