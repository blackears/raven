/*
 * Copyright 2011 Mark McKay
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * TestFrame.java
 *
 * Created on Sep 19, 2009, 1:14:35 PM
 */
package com.kitfox.raven.core.test;

import com.kitfox.coyote.math.CyColor4f;
import com.kitfox.raven.paint.common.RavenPaintColor;
import com.kitfox.raven.paint.control.ColorChooserPanel;
import com.kitfox.raven.paint.control.ColorEditorPanel;
import com.kitfox.raven.paint.control.ColorFieldH;
import com.kitfox.raven.paint.control.ColorFieldHS;
import com.kitfox.raven.paint.control.ColorFieldV;
import com.kitfox.raven.paint.control.ColorSliderPanel;
import com.kitfox.raven.paint.control.Gradient;
import com.kitfox.raven.paint.control.Gradient.StopEditor;
import com.kitfox.raven.paint.control.GradientSliderPanel;
import com.kitfox.raven.paint.control.GradientStop;
import com.kitfox.raven.paint.control.SimpleColorModel;
import com.kitfox.raven.paint.control.StopSide;
import java.awt.BorderLayout;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import javax.swing.JDialog;

/**
 *
 * @author kitfox
 */
public class ColorSliderMainFrame extends javax.swing.JFrame
        implements StopEditor
{

    private static final long serialVersionUID = 0;
//    ColorFieldB field = new ColorFieldB();
//    ColorFieldH field = new ColorFieldH();
//    FieldSliderPanel slider = new FieldSliderPanel();
    SimpleColorModel model = new SimpleColorModel();
    ColorEditorPanel colorEditor = new ColorEditorPanel();

    /**
     * Creates new form TestFrame
     */
    public ColorSliderMainFrame()
    {
        initComponents();
        {
            ColorFieldHS field = new ColorFieldHS(model);
            model.addPropertyChangeListener(field);
            ColorChooserPanel chooser = new ColorChooserPanel();

            field.setBright(.8f);

            chooser.setModel(model);
            chooser.setColorField(field);
            panel_pick.add(chooser, BorderLayout.CENTER);
        }
        {
            ColorFieldH field = new ColorFieldH(model);
            ColorSliderPanel slider = new ColorSliderPanel();

            field.setHorizontal(true);
            field.setSat(.9f);
            field.setBright(.9f);

            slider.setColorChooserModel(model);
            slider.setColorField(field);
            panel_slideH.add(slider, BorderLayout.CENTER);
        }
        {
            ColorFieldV field = new ColorFieldV(model);
            ColorSliderPanel slider = new ColorSliderPanel();

            field.setHorizontal(false);
            field.setHue(.9f);
            field.setSat(.9f);

            slider.setColorChooserModel(model);
            slider.setColorField(field);
            slider.setSide(StopSide.WEST);
            panel_slideV.add(slider, BorderLayout.CENTER);
        }
        {
            Gradient grad = new Gradient(CyColor4f.BLACK, CyColor4f.WHITE);
            grad.setStopEditor(this);
            GradientSliderPanel slider = new GradientSliderPanel();

            slider.setGradient(grad);
            slider.setSide(StopSide.EAST);
            panel_grad.add(slider, BorderLayout.CENTER);
        }

        setSize(640, 480);
    }

    public void editStop(final GradientStop stop)
    {
        CyColor4f oldColor = stop.getColor();
        PropertyChangeListener colorCopier = new PropertyChangeListener()
        {

            public void propertyChange(PropertyChangeEvent evt)
            {
                stop.setColor(colorEditor.getColor().asColor());
            }
        };

        colorEditor.setColor(new RavenPaintColor(stop.getColor()));
        colorEditor.addPropertyChangeListener(colorCopier);
        JDialog dlg = new JDialog(this, "Edit Color", true);
        dlg.getContentPane().add(colorEditor, BorderLayout.CENTER);
        dlg.pack();
        dlg.setVisible(true);

        colorEditor.removePropertyChangeListener(colorCopier);
        stop.setColor(colorEditor.getColor().asColor());
        dlg.dispose();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        panel_slideV = new javax.swing.JPanel();
        panel_slideH = new javax.swing.JPanel();
        panel_pick = new javax.swing.JPanel();
        panel_grad = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        panel_slideV.setBorder(javax.swing.BorderFactory.createBevelBorder(0));
        panel_slideV.setLayout(new java.awt.BorderLayout());

        panel_slideH.setBorder(javax.swing.BorderFactory.createBevelBorder(0));
        panel_slideH.setLayout(new java.awt.BorderLayout());

        panel_pick.setBorder(javax.swing.BorderFactory.createBevelBorder(0));
        panel_pick.setLayout(new java.awt.BorderLayout());

        panel_grad.setBorder(javax.swing.BorderFactory.createBevelBorder(0));
        panel_grad.setLayout(new java.awt.BorderLayout());

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panel_slideH, javax.swing.GroupLayout.DEFAULT_SIZE, 243, Short.MAX_VALUE)
                    .addComponent(panel_pick, javax.swing.GroupLayout.DEFAULT_SIZE, 243, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panel_slideV, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panel_grad, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panel_grad, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 298, Short.MAX_VALUE)
                    .addComponent(panel_slideV, javax.swing.GroupLayout.DEFAULT_SIZE, 298, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(panel_slideH, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(panel_pick, javax.swing.GroupLayout.DEFAULT_SIZE, 206, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(ColorSliderMainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(ColorSliderMainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(ColorSliderMainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(ColorSliderMainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable()
        {

            public void run()
            {
                new ColorSliderMainFrame().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel panel_grad;
    private javax.swing.JPanel panel_pick;
    private javax.swing.JPanel panel_slideH;
    private javax.swing.JPanel panel_slideV;
    // End of variables declaration//GEN-END:variables
}
